//
// Forms
// ----------------------------------------------------------------------------
.uform {
  padding-top: 15px;

  //Form group
  &-group {
    position: relative;
    margin-bottom: $form-group-margin-bottom;

    &--tight {
      margin-bottom: $form-group-margin-bottom / 2;
    }

    &--select {
      &:before {
        content: "";
        display: block;
        width: 8px;
        height: 8px;
        position: absolute;
        top: 50%;
        right: 3px;
        border-top: 1px solid setColor(gray,darker);
        border-right: 1px solid setColor(gray,darker);
        transform: rotate(135deg);
        pointer-events: none;
      }
    }

    &--datepicker,
    &--icon {
      .uform-control {
        > input {
          padding-left: 20px;
        }
        > label span {
          transform: scale3d(1, 1, 1) translate3d(20px, 23px, 0);
        }
      }
      .icon {
        position: absolute;
        left: 0;
        top: 10px;
      }
    }

    &--switcher {
      .uform-control {
        input[type="checkbox"] {
          opacity: 0;
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          max-height: 100%;
          + label {
            padding-right: 40px;
            &:after {
              content: "";
              width: 35px;
              height: 15px;
              transform: none;
              border-radius: 12px;
              background-color: setColor(gray,light);
              position: absolute;
              right: 0;
              left: auto;
              top: 50%;
              transform: translateY(-50%);
            }
            &:before {
              content: "";
              width: 20px;
              height: 20px;
              transform: none;
              border-radius: 50%;
              border-bottom-color: transparent;
              background-color: setColor(gray,lighter);
              box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.24), 0 0 1px 0 rgba(0, 0, 0, 0.12);;
              position: absolute;
              right: 16px;
              left: auto;
              top: 50%;
              transform: translateY(-50%);
              transition: all .2s ease-in;
            }
            span {
              transform: none;
              position: static;
            }
          }
          &:focus {
            + label span {
              color: inherit;
            }
          }
          &:checked {
            + label {
              &:before {
                right: 0;
                background-color: setColor(blue,base);
              }
            }
          }
        }
      }
    }

    input,
    select,
    textarea {
      display: block;
      background: none;
      border: none;
      overflow: hidden;
      position: relative;
      transition: margin 200ms ease-out; 
      height: $field-height;
      width: 100%;
      @include text(small_soft, setColor(gray,darker));
      @include placeholder(){ 
        color: transparent; 
      }

      // Disable auto-zoom on iOS inputs by targeting retina devices and increasing font-size
      // to the minimum where zoom is disabled
      @include breakpoint(0, $screen-xs-max){
        font-size: 16px;
      }

      // On focus or filled
      &:focus,
      &.ng-not-empty {
        outline: 0;

        & ~ label span {
          transform: scale3d(0.88, 0.88, 1) translate3d(0px, 0px, 0);
        }
        & ~ label {
          &::before {
            transform: scaleX(1);
          }
        }
      }

      &:focus {
        & ~ label span {
          color: setColor(blue, base);
        }
        & ~ label {
          &::before {
            border-bottom-color: setColor(blue, base);
          }
        }
      }

      //With error
      &.has-error {
        & ~ label span {
         color: setColor(red, dark);
        }
        & ~ label {
          &::before {
            border-bottom-color: setColor(red, dark);
            transform: scaleX(1);
          }
        }
        & ~ .icon {
          fill: setColor(red, dark);
        }
      }

      //Disabled or readonly
      &[disabled]:not(.has-error),
      &[readonly]:not(.has-error),
      fieldset[disabled]:not(.has-error) & {
        color: lighten(setColor(gray, dark), 20%);

        & + label {
          &::before,
          &::after {
            border-bottom-color: setColor(gray, light);
            border-bottom-style: dotted;
          }
          span {
            color: lighten(setColor(gray, dark), 20%);
          }
        }
      }
    }

    select {
      appearance: none;
      background: none;
      border: none;
      box-shadow: none;
      color: setColor(gray,darker);
      padding-top: 0;
      padding-bottom: 0;
      padding-right: 15px;
    }

    textarea {
      height: auto;
      overflow: auto;
      padding-top: 5px; //leave space with label
    }
    label {
      span {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
    }

    &.has-icon {
      .uform-control {
        padding-right: 25px;
      }
    }

  }

  //Form control
  &-control {
    position: relative;

    //Label/fake placeholder
    label {

      span {
        @include text(small_soft, setColor(gray,dark));
        pointer-events: none;
        position: absolute;
        margin-bottom: 0;
        width: 100%;
        left: 0;
        top: -15px;
        will-change: transform;
        transform: scale3d(1, 1, 1) translate3d(0, 23px, 0);
        transform-origin: 0 0;
        transition: transform 200ms ease-out;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }

      //Border bottom
      &::after,
      &::before {
        content: '';
        position: absolute;
        border-bottom-width: 1px;
        border-bottom-style: solid;
        border-bottom-color: setColor(gray, light);
        width: 100%;
        left: 0;
        bottom: 0;
      }
      &::before {
        transform-origin: left center;
        transition: transform 200ms ease-out;
        transform: scaleX(0);
        z-index: 1;
      }
    }
    
  } 
}
