//
// Hero
// Default heros are boxed
// ----------------------------------------------------------------------------
.hero {
  background-color: setColor(white, base);
  position: relative;
  // max-width: $container-over;
  margin: 0 auto;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1;

  //Dark pattern improves legibility
  &::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    background: transparent url(#{$assetPath}/overlay-pattern.png) repeat;
    opacity: 0.3;
  }

  &,
  &__content {
    height: $hero-height-mobile;
  }

  &__content {
    position: relative;
    z-index: 1;    
  }

  //tablet
  @include breakpoint($screen-sm) {
    &,
    &__content {
      height: $hero-height-tablet;

      .has-hero & {
        height:  $hero-height-tablet;
      }       
    }
  }

  //desktop
  @include breakpoint($grid-float-breakpoint) {
    &,
    &__content {
      height: $hero-height-desktop;

      .has-hero & {
        height:  $hero-height-desktop;
      }        
    }
  }

  // Background image
  // ----------------------------------------------------------------------------
  &__bg {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: transparent;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }

  // Nav
  // ----------------------------------------------------------------------------
  &__nav {

    a {
      color: setColor(white, base);
      position: absolute;
      top: 50%;
      margin-top: -18px;
      display: block;
      padding: 20px 10px;
      overflow: hidden;
      text-align: center;
      cursor: pointer;

      &:hover {
        .icon {
          background-color: rgba(setColor(gray,darker),.8);
        }
      }
    }

    .icon {
      background-color: setColor(gray,light);
      border-radius: 50%;
      color: white;
      font-size: 36px;
      padding: 8px;
      display: block;
    }

    .next {
      right: 0;
    }

    .prev {
      left: 0;
    }
  }

  // Header is on top of the hero so it has to be positon: absolute
  // ----------------------------------------------------------------------------
  &--home {
    position: absolute;
  }

    // For mobile, hero is taller than default, used when it has a lot of content on top
  // ----------------------------------------------------------------------------
  @include breakpoint(0, $screen-xs-max) {
    &--taller {
      height: $hero-height-taller; 

      .hero {
        &__content {
          height: $hero-height-taller;
        }
      }
    }
  }

  // For mobile, hero is as tall as the screen, taking 100vh
  // ----------------------------------------------------------------------------
  &--fullheight {
    height: $hero-height-full; 

    .hero {
      &__content {
        height: $hero-height-full;
      }
    }
  }


  // Hero is as wide as the screen, taking 100% width
  // ----------------------------------------------------------------------------
  &--fullwidth {
    width: 100%;
    max-width: none;
    margin: 0;
  }

  // Checkout
  // ----------------------------------------------------------------------------
  &-checkout {

    &, .hero__content {
      height: 394px;
      position: relative;
      
      @include breakpoint(md){
        height: 394px;
      }
      
      @include breakpoint(sm){
        height: 394px;
      }

    }

    &__header {
      text-align: center;
      position: absolute;
      width: 100%;
      top: 25%;
    }

    &__content {
      position: absolute;
      width: 100%;
      bottom: 40px;
    }

    &__title {
      @include title(headline);
    }
    &__subtitle {
      @include title(tagline);
    }
    
  }

  // Confirmation
  // ----------------------------------------------------------------------------
  &-confirmation {
    background-color: transparent;
    height: auto;

    //hide image and reset height for mobile
    @include breakpoint(0, $screen-xs-max){
      padding-top: $padding-box-double;

      .hero__content {
        height: auto;
      }
      .hero__bg {
        display: none;
      }
      &::before {
        content: "";
        background: setColor(gray,lightest);
        opacity: 1;
      }
    }

    @include breakpoint($screen-sm) {
      &,&__content {
        height: 394px;
        .has-hero & {
          height: 394px;
        }       
      }
    }

    @include breakpoint($grid-float-breakpoint) {
      &,&__content {
        height: 394px;
        padding: 0 30px;
        .has-hero & {
          height: 394px;
        }        
      }
    }
  }


}
